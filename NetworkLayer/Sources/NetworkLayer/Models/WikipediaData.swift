//
// WikipediaData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WikipediaData: Codable, JSONEncodable, Hashable {

    public var imDbId: String?
    public var title: String?
    public var fullTitle: String?
    public var type: String?
    public var year: String?
    public var language: String?
    public var titleInLanguage: String?
    public var url: String?
    public var plotShort: WikipediaDataPlot?
    public var plotFull: WikipediaDataPlot?
    public var errorMessage: String?

    public init(imDbId: String? = nil, title: String? = nil, fullTitle: String? = nil, type: String? = nil, year: String? = nil, language: String? = nil, titleInLanguage: String? = nil, url: String? = nil, plotShort: WikipediaDataPlot? = nil, plotFull: WikipediaDataPlot? = nil, errorMessage: String? = nil) {
        self.imDbId = imDbId
        self.title = title
        self.fullTitle = fullTitle
        self.type = type
        self.year = year
        self.language = language
        self.titleInLanguage = titleInLanguage
        self.url = url
        self.plotShort = plotShort
        self.plotFull = plotFull
        self.errorMessage = errorMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case imDbId
        case title
        case fullTitle
        case type
        case year
        case language
        case titleInLanguage
        case url
        case plotShort
        case plotFull
        case errorMessage
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(imDbId, forKey: .imDbId)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(fullTitle, forKey: .fullTitle)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(year, forKey: .year)
        try container.encodeIfPresent(language, forKey: .language)
        try container.encodeIfPresent(titleInLanguage, forKey: .titleInLanguage)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(plotShort, forKey: .plotShort)
        try container.encodeIfPresent(plotFull, forKey: .plotFull)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
    }
}

