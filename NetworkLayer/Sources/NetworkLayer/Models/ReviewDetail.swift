//
// ReviewDetail.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReviewDetail: Codable, JSONEncodable, Hashable {

    public var username: String?
    public var userUrl: String?
    public var reviewLink: String?
    public var warningSpoilers: Bool?
    public var date: String?
    public var rate: String?
    public var helpful: String?
    public var title: String?
    public var content: String?

    public init(username: String? = nil, userUrl: String? = nil, reviewLink: String? = nil, warningSpoilers: Bool? = nil, date: String? = nil, rate: String? = nil, helpful: String? = nil, title: String? = nil, content: String? = nil) {
        self.username = username
        self.userUrl = userUrl
        self.reviewLink = reviewLink
        self.warningSpoilers = warningSpoilers
        self.date = date
        self.rate = rate
        self.helpful = helpful
        self.title = title
        self.content = content
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case username
        case userUrl
        case reviewLink
        case warningSpoilers
        case date
        case rate
        case helpful
        case title
        case content
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(username, forKey: .username)
        try container.encodeIfPresent(userUrl, forKey: .userUrl)
        try container.encodeIfPresent(reviewLink, forKey: .reviewLink)
        try container.encodeIfPresent(warningSpoilers, forKey: .warningSpoilers)
        try container.encodeIfPresent(date, forKey: .date)
        try container.encodeIfPresent(rate, forKey: .rate)
        try container.encodeIfPresent(helpful, forKey: .helpful)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(content, forKey: .content)
    }
}

