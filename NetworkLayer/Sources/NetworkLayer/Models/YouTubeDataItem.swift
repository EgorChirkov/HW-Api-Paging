//
// YouTubeDataItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct YouTubeDataItem: Codable, JSONEncodable, Hashable {

    public var quality: String?
    public var mimeType: String?
    public var _extension: String?
    public var url: String?

    public init(quality: String? = nil, mimeType: String? = nil, _extension: String? = nil, url: String? = nil) {
        self.quality = quality
        self.mimeType = mimeType
        self._extension = _extension
        self.url = url
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case quality
        case mimeType
        case _extension = "extension"
        case url
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(quality, forKey: .quality)
        try container.encodeIfPresent(mimeType, forKey: .mimeType)
        try container.encodeIfPresent(_extension, forKey: ._extension)
        try container.encodeIfPresent(url, forKey: .url)
    }
}

