//
// NameAwardData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NameAwardData: Codable, JSONEncodable, Hashable {

    public var imDbId: String?
    public var name: String?
    public var description: String?
    public var items: [NameAwardEvent]?
    public var nameAwardsHtml: String?
    public var errorMessage: String?

    public init(imDbId: String? = nil, name: String? = nil, description: String? = nil, items: [NameAwardEvent]? = nil, nameAwardsHtml: String? = nil, errorMessage: String? = nil) {
        self.imDbId = imDbId
        self.name = name
        self.description = description
        self.items = items
        self.nameAwardsHtml = nameAwardsHtml
        self.errorMessage = errorMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case imDbId
        case name
        case description
        case items
        case nameAwardsHtml
        case errorMessage
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(imDbId, forKey: .imDbId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(items, forKey: .items)
        try container.encodeIfPresent(nameAwardsHtml, forKey: .nameAwardsHtml)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
    }
}

