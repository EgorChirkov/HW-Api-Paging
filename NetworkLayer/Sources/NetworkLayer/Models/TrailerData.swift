//
// TrailerData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TrailerData: Codable, JSONEncodable, Hashable {

    public var imDbId: String?
    public var title: String?
    public var fullTitle: String?
    public var type: String?
    public var year: String?
    public var videoId: String?
    public var videoTitle: String?
    public var videoDescription: String?
    public var thumbnailUrl: String?
    public var uploadDate: String?
    public var link: String?
    public var linkEmbed: String?
    public var errorMessage: String?

    public init(imDbId: String? = nil, title: String? = nil, fullTitle: String? = nil, type: String? = nil, year: String? = nil, videoId: String? = nil, videoTitle: String? = nil, videoDescription: String? = nil, thumbnailUrl: String? = nil, uploadDate: String? = nil, link: String? = nil, linkEmbed: String? = nil, errorMessage: String? = nil) {
        self.imDbId = imDbId
        self.title = title
        self.fullTitle = fullTitle
        self.type = type
        self.year = year
        self.videoId = videoId
        self.videoTitle = videoTitle
        self.videoDescription = videoDescription
        self.thumbnailUrl = thumbnailUrl
        self.uploadDate = uploadDate
        self.link = link
        self.linkEmbed = linkEmbed
        self.errorMessage = errorMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case imDbId
        case title
        case fullTitle
        case type
        case year
        case videoId
        case videoTitle
        case videoDescription
        case thumbnailUrl
        case uploadDate
        case link
        case linkEmbed
        case errorMessage
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(imDbId, forKey: .imDbId)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(fullTitle, forKey: .fullTitle)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(year, forKey: .year)
        try container.encodeIfPresent(videoId, forKey: .videoId)
        try container.encodeIfPresent(videoTitle, forKey: .videoTitle)
        try container.encodeIfPresent(videoDescription, forKey: .videoDescription)
        try container.encodeIfPresent(thumbnailUrl, forKey: .thumbnailUrl)
        try container.encodeIfPresent(uploadDate, forKey: .uploadDate)
        try container.encodeIfPresent(link, forKey: .link)
        try container.encodeIfPresent(linkEmbed, forKey: .linkEmbed)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
    }
}

